// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()

  email    String  @unique
  name     String?
  password String

  avatarPath        String?
  verificationToken String? @default(cuid()) @map("verification_token")
  token             String? @unique @default(cuid()) @map("token")

  applications    Application[]
  rights Role[] @default([USER])
}

model Service {
  id               String    @id @default(cuid())
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  
  slug             String    @unique
  title            String
  description      String
  image           String
  fullDescription String
  features        String[]
  price           String?
}

model Application {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now()) @map("created_at")
  serviceSlug String
  serviceName String
  userName    String
  phone       String
  email       String
  comment     String?
  status      String   @default("new") // new, in_progress, completed
  userId      String?  // Привязка к пользователю
  user        User?    @relation(fields: [userId], references: [id])
}

enum Role {
  USER // Пользователь
  MANAGER // Менеджер
  ADMIN // Администратор
}
